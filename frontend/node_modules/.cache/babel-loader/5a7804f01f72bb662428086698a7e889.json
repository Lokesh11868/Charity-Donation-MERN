{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CHARITY-DONATION\\\\frontend\\\\src\\\\components\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction PaymentForm() {\n  _s();\n\n  const location = useLocation();\n  const [note, setNote] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    amount: \"\"\n  });\n  const [loading, setLoading] = useState(false); // to handle the loading state\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevNote => ({ ...prevNote,\n      [name]: value\n    }));\n  }\n\n  async function submitData(event) {\n    event.preventDefault(); // Simple validation to check if all fields are filled\n\n    if (!note.name || !note.email || !note.phone || !note.amount) {\n      alert(\"All fields are required.\");\n      return;\n    }\n\n    setLoading(true);\n    note.title = location.state.title;\n    note.content = location.state.content;\n\n    try {\n      // Send data to your backend to create order\n      const res = await axios.post(\"http://localhost:4000/create-order\", note);\n      const {\n        orderId,\n        amount,\n        currency\n      } = res.data; // Trigger Razorpay payment\n\n      const options = {\n        key: \"rzp_test_wzhYWw106XkE9u\",\n        // Replace with your Razorpay Key ID\n        amount: amount,\n        // Amount in paisa\n        currency: currency,\n        name: \"Your Organization Name\",\n        description: \"Donation Payment\",\n        order_id: orderId,\n        handler: async function (response) {\n          console.log(\"Payment Successful:\", response);\n\n          try {\n            // Verify the payment with your backend\n            const verifyRes = await axios.post(\"http://localhost:4000/verify-payment\", {\n              order_id: orderId,\n              payment_id: response.razorpay_payment_id,\n              razorpay_signature: response.razorpay_signature,\n              amount: note.amount\n            });\n            alert(\"Payment Successful!\");\n          } catch (err) {\n            alert(\"Payment verification failed!\");\n            console.log(err);\n          }\n        },\n        prefill: {\n          name: note.name,\n          email: note.email,\n          contact: note.phone\n        },\n        theme: {\n          color: \"#F37254\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    } finally {\n      setLoading(false);\n    } // Reset the form\n\n\n    setNote({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      amount: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DONATION FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitData,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: handleChange,\n        value: note.name,\n        placeholder: \"Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        onChange: handleChange,\n        value: note.email,\n        placeholder: \"Email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        onChange: handleChange,\n        value: note.phone,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"amount\",\n        onChange: handleChange,\n        value: note.amount,\n        placeholder: \"Amount\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"title\",\n        value: location.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"content\",\n        value: location.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentForm, \"CgdzlK8RX24pBFQl2WmQyX1erEQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Lokesh/CHARITY-DONATION/frontend/src/components/PaymentForm.js"],"names":["React","useState","axios","useLocation","PaymentForm","location","note","setNote","name","email","phone","amount","loading","setLoading","handleChange","event","value","target","prevNote","submitData","preventDefault","alert","title","state","content","res","post","orderId","currency","data","options","key","description","order_id","handler","response","console","log","verifyRes","payment_id","razorpay_payment_id","razorpay_signature","err","prefill","contact","theme","color","rzp","window","Razorpay","open","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction PaymentForm() {\r\n  const location = useLocation();\r\n\r\n  const [note, setNote] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false); // to handle the loading state\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote((prevNote) => ({\r\n      ...prevNote,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  async function submitData(event) {\r\n    event.preventDefault();\r\n\r\n    // Simple validation to check if all fields are filled\r\n    if (!note.name || !note.email || !note.phone || !note.amount) {\r\n      alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    note.title = location.state.title;\r\n    note.content = location.state.content;\r\n\r\n    try {\r\n      // Send data to your backend to create order\r\n      const res = await axios.post(\"http://localhost:4000/create-order\", note);\r\n      const { orderId, amount, currency } = res.data;\r\n\r\n      // Trigger Razorpay payment\r\n      const options = {\r\n        key: \"rzp_test_wzhYWw106XkE9u\", // Replace with your Razorpay Key ID\r\n        amount: amount, // Amount in paisa\r\n        currency: currency,\r\n        name: \"Your Organization Name\",\r\n        description: \"Donation Payment\",\r\n        order_id: orderId,\r\n        handler: async function (response) {\r\n          console.log(\"Payment Successful:\", response);\r\n\r\n          try {\r\n            // Verify the payment with your backend\r\n            const verifyRes = await axios.post(\"http://localhost:4000/verify-payment\", {\r\n              order_id: orderId,\r\n              payment_id: response.razorpay_payment_id,\r\n              razorpay_signature: response.razorpay_signature,\r\n              amount: note.amount,\r\n            });\r\n            alert(\"Payment Successful!\");\r\n          } catch (err) {\r\n            alert(\"Payment verification failed!\");\r\n            console.log(err);\r\n          }\r\n        },\r\n        prefill: {\r\n          name: note.name,\r\n          email: note.email,\r\n          contact: note.phone,\r\n        },\r\n        theme: {\r\n          color: \"#F37254\",\r\n        },\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error(\"Error creating order:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n    // Reset the form\r\n    setNote({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      amount: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"payment-form\">\r\n      <h1>DONATION FORM</h1>\r\n      <form onSubmit={submitData}>\r\n        <input\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={note.name}\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={note.email}\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"phone\"\r\n          onChange={handleChange}\r\n          value={note.phone}\r\n          placeholder=\"Phone\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"amount\"\r\n          onChange={handleChange}\r\n          value={note.amount}\r\n          placeholder=\"Amount\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"title\"\r\n          value={location.state.title}\r\n        />\r\n\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"content\"\r\n          value={location.state.content}\r\n        />\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Processing...\" : \"Pay\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}