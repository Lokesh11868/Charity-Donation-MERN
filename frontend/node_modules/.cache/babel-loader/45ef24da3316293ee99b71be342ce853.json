{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CROWDFUNDING-WEBSITE\\\\crowdfunding\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Login() {\n  _s();\n\n  const [credential, setCredential] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(null); // For displaying errors\n\n  const history = useHistory();\n  const [user, setUser] = useState(null); // Check if user is already logged in (from localStorage)\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n      history.push({\n        pathname: \"/admin\",\n        state: {\n          loggedInStatus: true\n        }\n      });\n    }\n  }, [history]); // Handle input change\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredential(prevCredential => ({ ...prevCredential,\n      [name]: value\n    }));\n  } // Submit credentials for login\n\n\n  function submitCredential(event) {\n    event.preventDefault();\n    axios.post(\"http://localhost:4000/login\", credential).then(res => {\n      const data = res.data; // If login is successful\n\n      if (data.result) {\n        localStorage.setItem(\"user\", JSON.stringify(data)); // Store user data in localStorage\n\n        setUser(data);\n        history.push({\n          pathname: \"/admin\",\n          state: {\n            loggedInStatus: true\n          }\n        });\n      } else {\n        // If login fails, set an error message\n        setErrorMessage(\"Invalid email or password.\");\n      }\n    }).catch(error => {\n      console.log(error);\n      setErrorMessage(\"An error occurred. Please try again.\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          value: credential.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          value: credential.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submitCredential,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"LsMU9O6Ue2rRKkr3zHpcCLohZZc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Lokesh/CROWDFUNDING-WEBSITE/crowdfunding/src/components/Login.js"],"names":["React","useState","useEffect","useHistory","axios","Login","credential","setCredential","email","password","errorMessage","setErrorMessage","history","user","setUser","loggedInUser","localStorage","getItem","foundUser","JSON","parse","push","pathname","state","loggedInStatus","handleChange","event","name","value","target","prevCredential","submitCredential","preventDefault","post","then","res","data","result","setItem","stringify","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login() {\r\n  const [credential, setCredential] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);  // For displaying errors\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Check if user is already logged in (from localStorage)\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n      history.push({\r\n        pathname: \"/admin\",\r\n        state: { loggedInStatus: true },\r\n      });\r\n    }\r\n  }, [history]);\r\n\r\n  // Handle input change\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setCredential((prevCredential) => ({\r\n      ...prevCredential,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  // Submit credentials for login\r\n  function submitCredential(event) {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/login\", credential)\r\n      .then((res) => {\r\n        const data = res.data;\r\n\r\n        // If login is successful\r\n        if (data.result) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data));  // Store user data in localStorage\r\n          setUser(data);\r\n          history.push({\r\n            pathname: \"/admin\",\r\n            state: { loggedInStatus: true },\r\n          });\r\n        } else {\r\n          // If login fails, set an error message\r\n          setErrorMessage(\"Invalid email or password.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setErrorMessage(\"An error occurred. Please try again.\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n      <h1>LOGIN</h1>\r\n      <form>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={credential.email}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={credential.password}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={submitCredential}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}