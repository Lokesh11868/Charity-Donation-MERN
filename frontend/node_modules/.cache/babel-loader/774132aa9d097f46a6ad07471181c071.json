{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CHARITY-DONATION\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\"; // Import Link\n\nfunction Login() {\n  _s();\n\n  const [credential, setCredential] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\"); // State to store login errors\n\n  const history = useHistory();\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredential(prevCredential => ({ ...prevCredential,\n      [name]: value\n    }));\n  }\n\n  function submitCredential(event) {\n    event.preventDefault(); // Reset error state before making the request\n\n    setError(\"\"); // Send login request to the backend\n\n    axios.post(\"http://localhost:4000/login\", credential).then(res => {\n      if (res.data.result === true) {\n        // Save user data to localStorage and redirect to home/admin page\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\n        history.push({\n          pathname: \"/home\",\n          // Change this to the actual home page\n          state: {\n            loggedInStatus: true\n          }\n        });\n      }\n    }).catch(error => {\n      console.error(\"Login failed: \", error);\n      setError(\"Invalid credentials. Please try again.\");\n    });\n  }\n\n  useEffect(() => {\n    // Check if the user is already logged in by checking localStorage\n    const user = localStorage.getItem(\"user\");\n\n    if (user) {\n      history.push(\"/home\"); // Redirect to home if user is already logged in\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        value: credential.email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        value: credential.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitCredential,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Not Registered?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"eKioHSPiYraozwcx/BhHfC2f3as=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Lokesh/CHARITY-DONATION/frontend/src/components/Login.js"],"names":["React","useState","useEffect","axios","useHistory","Link","Login","credential","setCredential","email","password","error","setError","history","handleChange","event","name","value","target","prevCredential","submitCredential","preventDefault","post","then","res","data","result","localStorage","setItem","JSON","stringify","push","pathname","state","loggedInStatus","catch","console","user","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"; // Import Link\r\n\r\nfunction Login() {\r\n  const [credential, setCredential] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");  // State to store login errors\r\n  const history = useHistory();\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setCredential((prevCredential) => ({\r\n      ...prevCredential,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function submitCredential(event) {\r\n    event.preventDefault();\r\n\r\n    // Reset error state before making the request\r\n    setError(\"\");\r\n\r\n    // Send login request to the backend\r\n    axios\r\n      .post(\"http://localhost:4000/login\", credential)\r\n      .then((res) => {\r\n        if (res.data.result === true) {\r\n          // Save user data to localStorage and redirect to home/admin page\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          history.push({\r\n            pathname: \"/home\",  // Change this to the actual home page\r\n            state: { loggedInStatus: true },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Login failed: \", error);\r\n        setError(\"Invalid credentials. Please try again.\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check if the user is already logged in by checking localStorage\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      history.push(\"/home\");  // Redirect to home if user is already logged in\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n      <form>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={credential.email}\r\n          required\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={credential.password}\r\n          required\r\n        />\r\n        <button type=\"submit\" onClick={submitCredential}>\r\n          Login\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}  {/* Show error message if any */}\r\n      <p>\r\n        Not Registered?{\" \"}\r\n        <Link to=\"/signup\">Signup</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}