{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CROWDFUNDING-WEBSITE\\\\crowdfunding\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signup() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory(); // Handle input changes\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }; // Submit the signup form\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password,\n          name: formData.name\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'An error occurred. Please try again.');\n      }\n\n      const data = await response.json();\n      console.log('User registered successfully:', data);\n      setMessage(\"Signup successful! Redirecting to login...\");\n      setTimeout(() => {\n        history.push(\"/login\"); // Redirect to login after signup\n      }, 2000);\n    } catch (error) {\n      console.error('Error during sign-up:', error);\n      setMessage(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"nW4ZykEMmsuK8ZN+1ZIchD3UBLo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Lokesh/CROWDFUNDING-WEBSITE/crowdfunding/src/components/Signup.js"],"names":["React","useState","axios","useHistory","Signup","formData","setFormData","name","email","password","message","setMessage","history","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","console","log","setTimeout","push","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMW,OAAO,GAAGT,UAAU,EAA1B,CAHgB,CAKhB;;AACA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACS,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAzC,KAAD,CAAX;AACD,GAFD,CANgB,CAUhB;;;AACA,QAAMC,YAAY,GAAG,MAAOH,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,UAAAA,KAAK,EAAEH,QAAQ,CAACG,KAAlB;AAAyBC,UAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QAA5C;AAAsDF,UAAAA,IAAI,EAAEF,QAAQ,CAACE;AAArE,SAAf;AALoC,OAAhB,CAA5B;;AAQA,UAAI,CAACY,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAxB;AACA,cAAM,IAAIC,KAAJ,CAAUF,SAAS,CAACjB,OAAV,IAAqB,sCAA/B,CAAN;AACD;;AAED,YAAMoB,IAAI,GAAG,MAAMX,QAAQ,CAACS,IAAT,EAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,IAA7C;AACAnB,MAAAA,UAAU,CAAC,4CAAD,CAAV;AACAsB,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,OAAO,CAACsB,IAAR,CAAa,QAAb,EADe,CACS;AACzB,OAFS,EAEP,IAFO,CAAV;AAGD,KApBD,CAoBE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACI,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACAxB,MAAAA,UAAU,CAACwB,KAAK,CAACzB,OAAP,CAAV;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEO,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEZ,QAAQ,CAACE,IAHlB;AAIE,UAAA,QAAQ,EAAEM,YAJZ;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAER,QAAQ,CAACG,KAHlB;AAIE,UAAA,QAAQ,EAAEK,YAJZ;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAER,QAAQ,CAACI,QAHlB;AAIE,UAAA,QAAQ,EAAEI,YAJZ;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAmCGH,OAAO,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAnCd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA9EQN,M;UAGSD,U;;;KAHTC,M;AAgFT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Submit the signup form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: formData.email, password: formData.password, name: formData.name }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'An error occurred. Please try again.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('User registered successfully:', data);\r\n      setMessage(\"Signup successful! Redirecting to login...\");\r\n      setTimeout(() => {\r\n        history.push(\"/login\"); // Redirect to login after signup\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Error during sign-up:', error);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Signup</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}