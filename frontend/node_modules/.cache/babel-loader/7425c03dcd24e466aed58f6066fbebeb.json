{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CHARITY-DONATION\\\\frontend\\\\src\\\\components\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CreateArea from \"./CreateArea\";\nimport AdminCard from \"./AdminCard\";\nimport axios from \"axios\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Admin(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [newadmin, setNewadmin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    if (typeof location.state === \"undefined\") {\n      // console.log(\"if.location.state:\", location.state.loggedInStatus);\n      // setIsLoggedIn(false);\n      var a = 0;\n    } else {\n      setIsLoggedIn(location.state.loggedInStatus);\n      console.log(\"usestate:\", isLoggedIn);\n      console.log(\"location.state:\", location.state.loggedInStatus);\n    }\n  }, []);\n\n  function addNote(newNote) {\n    axios.post(\"http://localhost:4000/admin\", newNote).then(res => console.log(res.data)).catch(error => console.log(error)); // for automatic refreshing page\n\n    window.location.reload();\n  }\n\n  function deleteNote(data) {\n    //Adding one more key ie action=\"delete\" to get know in backend that this note is to be deleted\n    data.action = \"delete\";\n    console.log(data);\n    axios.post(\"http://localhost:4000/admin\", data).then(res => console.log(res.data)).catch(error => console.log(error)); // for automatic refreshing page\n\n    window.location.reload();\n  }\n\n  function UpdateNote(info) {\n    history.push({\n      pathname: '/updatecampaign',\n      state: {\n        // location state\n        olddata: info\n      }\n    });\n  }\n\n  function BlockNote(data) {\n    axios.post(\"http://localhost:4000/blockcampaign\", data).then(res => {}).catch(error => console.log(error));\n  } //updated data array\n\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/admin\").then(res => {\n      // setTimeout(() => {\n      setData(res.data); // },1000)\n    }).catch(function (error) {\n      console.log(error);\n    }); // },);\n  }, []); //cards data\n\n  console.log(data); // console.log(\"outside function usestate:\",isLoggedIn);\n  // console.log(\"location.state:\",location.state.loggedInStatus);\n  //for deleting token\n\n  const handleLogout = () => {\n    localStorage.clear();\n    history.push({\n      pathname: '/login',\n      state: {// location state\n      }\n    });\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewadmin(prevCredential => {\n      return { ...prevCredential,\n        [name]: value\n      };\n    });\n  }\n\n  function createNewAdmin(event) {\n    event.preventDefault();\n    axios.post(\"http://localhost:4000/newadmin\", newadmin).then(res => {}).catch(error => console.log(error));\n    setNewadmin({\n      email: \"\",\n      password: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger btn-lg adminLogout\",\n      onClick: handleLogout,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"AdminAddCampaignTitle\",\n      children: \"ADD CAMPAIGN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"AdminAddAdminTitle\",\n      children: \"ADD ADMIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AdminAddCampaignForm Adminform\",\n      children: /*#__PURE__*/_jsxDEV(CreateArea, {\n        onAdd: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AdminAddNewAdminForm Adminform\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          value: newadmin.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          value: newadmin.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: createNewAdmin,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"AdminCard\",\n      children: data.map((noteItem, index) => {\n        return /*#__PURE__*/_jsxDEV(AdminCard, {\n          id: index,\n          title: noteItem.title,\n          content: noteItem.content,\n          amount: noteItem.amount,\n          onDelete: deleteNote,\n          onUpdate: UpdateNote,\n          onBlock: BlockNote\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"k/WRwc/gjAS2gL+DEKbhxdwt3/w=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/Lokesh/CHARITY-DONATION/frontend/src/components/Admin.js"],"names":["React","useState","useEffect","CreateArea","AdminCard","axios","Redirect","useLocation","useHistory","Admin","props","isLoggedIn","setIsLoggedIn","newadmin","setNewadmin","email","password","location","history","state","a","loggedInStatus","console","log","addNote","newNote","post","then","res","data","catch","error","window","reload","deleteNote","action","UpdateNote","info","push","pathname","olddata","BlockNote","setData","get","handleLogout","localStorage","clear","handleChange","event","name","value","target","prevCredential","createNewAdmin","preventDefault","map","noteItem","index","title","content","amount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAKA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,OAAOe,QAAQ,CAACE,KAAhB,KAA0B,WAA9B,EAA2C;AACzC;AACA;AACA,UAAIC,CAAC,GAAG,CAAR;AACD,KAJD,MAIO;AACLR,MAAAA,aAAa,CAACK,QAAQ,CAACE,KAAT,CAAeE,cAAhB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBZ,UAAzB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,QAAQ,CAACE,KAAT,CAAeE,cAA9C;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASG,OAAT,CAAiBC,OAAjB,EAA0B;AACxBpB,IAAAA,KAAK,CACFqB,IADH,CACQ,6BADR,EACuCD,OADvC,EAEGE,IAFH,CAESC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB,CAFjB,EAGGC,KAHH,CAGUC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAHpB,EADwB,CAMtB;;AACAC,IAAAA,MAAM,CAACf,QAAP,CAAgBgB,MAAhB;AACH;;AAED,WAASC,UAAT,CAAoBL,IAApB,EAA0B;AACxB;AACAA,IAAAA,IAAI,CAACM,MAAL,GAAc,QAAd;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AAEAxB,IAAAA,KAAK,CACFqB,IADH,CACQ,6BADR,EACuCG,IADvC,EAEGF,IAFH,CAESC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB,CAFjB,EAGGC,KAHH,CAGUC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAHpB,EALwB,CAUrB;;AACDC,IAAAA,MAAM,CAACf,QAAP,CAAgBgB,MAAhB;AACH;;AAGD,WAASG,UAAT,CAAoBC,IAApB,EAA0B;AACxBnB,IAAAA,OAAO,CAACoB,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE,iBADC;AAEXpB,MAAAA,KAAK,EAAE;AAAG;AACFqB,QAAAA,OAAO,EAACH;AADT;AAFI,KAAb;AAMD;;AAED,WAASI,SAAT,CAAmBZ,IAAnB,EAAyB;AAEvBxB,IAAAA,KAAK,CACJqB,IADD,CACM,qCADN,EAC6CG,IAD7C,EAECF,IAFD,CAEOC,GAAD,IAAS,CAAE,CAFjB,EAGCE,KAHD,CAGQC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAHlB;AAKD,GAjEmB,CAoEpB;;;AACA,QAAM,CAACF,IAAD,EAAOa,OAAP,IAAkBzC,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFsC,GADH,CACO,6BADP,EAEGhB,IAFH,CAESC,GAAD,IAAS;AACb;AACAc,MAAAA,OAAO,CAACd,GAAG,CAACC,IAAL,CAAP,CAFa,CAGb;AACD,KANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KATH,EADc,CAYd;AACD,GAbQ,EAaN,EAbM,CAAT,CAvEoB,CAsFpB;;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAvFoB,CAyFpB;AAEA;AAGA;;AACA,QAAMe,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,KAAb;AAGA5B,IAAAA,OAAO,CAACoB,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE,QADC;AAEXpB,MAAAA,KAAK,EAAE,CAAG;AAAH;AAFI,KAAb;AAMD,GAVD;;AAYA,WAAS4B,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEArC,IAAAA,WAAW,CAAEsC,cAAD,IAAoB;AAC9B,aAAO,EACL,GAAGA,cADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALU,CAAX;AAMD;;AAED,WAASG,cAAT,CAAwBL,KAAxB,EAA8B;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AAEAjD,IAAAA,KAAK,CACFqB,IADH,CACQ,gCADR,EAC0Cb,QAD1C,EAEGc,IAFH,CAESC,GAAD,IAAS,CAAE,CAFnB,EAGGE,KAHH,CAGUC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAHpB;AAKEjB,IAAAA,WAAW,CAAC;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KAAD,CAAX;AAKD;;AAQH,sBACE;AAAA,4BAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,mCAA5B;AAAgE,MAAA,OAAO,EAAE4B,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACA,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEpB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BAEA;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAEuB,YAHZ;AAIE,UAAA,KAAK,EAAElC,QAAQ,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAFF,2BASE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,QAAQ,EAAEgC,YAHZ;AAIE,UAAA,KAAK,EAAElC,QAAQ,CAACG;AAJlB;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEqC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAdF,eAuCE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACCxB,IAAI,CAAC0B,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,4BACE,QAAC,SAAD;AAEE,UAAA,EAAE,EAAEA,KAFN;AAGE,UAAA,KAAK,EAAED,QAAQ,CAACE,KAHlB;AAIE,UAAA,OAAO,EAAEF,QAAQ,CAACG,OAJpB;AAKE,UAAA,MAAM,EAAEH,QAAQ,CAACI,MALnB;AAME,UAAA,QAAQ,EAAE1B,UANZ;AAOE,UAAA,QAAQ,EAAEE,UAPZ;AAQE,UAAA,OAAO,EAAEK;AARX,WACOgB,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbA;AADD;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD;;GAvMQhD,K;UAQUF,W,EAEDC,U;;;KAVTC,K;AAyMT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport AdminCard from \"./AdminCard\";\r\nimport axios from \"axios\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Admin(props) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n  const [newadmin, setNewadmin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (typeof location.state === \"undefined\") {\r\n      // console.log(\"if.location.state:\", location.state.loggedInStatus);\r\n      // setIsLoggedIn(false);\r\n      var a = 0;\r\n    } else {\r\n      setIsLoggedIn(location.state.loggedInStatus);\r\n      console.log(\"usestate:\", isLoggedIn);\r\n      console.log(\"location.state:\", location.state.loggedInStatus);\r\n    }\r\n  }, []);\r\n\r\n  function addNote(newNote) {\r\n    axios\r\n      .post(\"http://localhost:4000/admin\", newNote)\r\n      .then((res) => console.log(res.data))\r\n      .catch((error) => console.log(error));\r\n\r\n      // for automatic refreshing page\r\n      window.location.reload();\r\n  }\r\n\r\n  function deleteNote(data) {\r\n    //Adding one more key ie action=\"delete\" to get know in backend that this note is to be deleted\r\n    data.action = \"delete\";\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/admin\", data)\r\n      .then((res) => console.log(res.data))\r\n      .catch((error) => console.log(error));\r\n\r\n       // for automatic refreshing page\r\n      window.location.reload();\r\n  }\r\n\r\n\r\n  function UpdateNote(info) {\r\n    history.push({\r\n      pathname: '/updatecampaign',\r\n      state: {  // location state\r\n              olddata:info\r\n             },\r\n    });\r\n  }\r\n\r\n  function BlockNote(data) {\r\n    \r\n    axios\r\n    .post(\"http://localhost:4000/blockcampaign\", data)\r\n    .then((res) => {})\r\n    .catch((error) => console.log(error));\r\n\r\n  }\r\n\r\n\r\n  //updated data array\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:4000/admin\")\r\n      .then((res) => {\r\n        // setTimeout(() => {\r\n        setData(res.data);\r\n        // },1000)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    // },);\r\n  }, []);\r\n\r\n  //cards data\r\n  console.log(data);\r\n\r\n  // console.log(\"outside function usestate:\",isLoggedIn);\r\n\r\n  // console.log(\"location.state:\",location.state.loggedInStatus);\r\n\r\n\r\n  //for deleting token\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    \r\n    \r\n    history.push({\r\n      pathname: '/login',\r\n      state: {  // location state\r\n             },\r\n    });\r\n\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNewadmin((prevCredential) => {\r\n      return {\r\n        ...prevCredential,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  function createNewAdmin(event){\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/newadmin\", newadmin)\r\n      .then((res) => {})\r\n      .catch((error) => console.log(error));\r\n\r\n      setNewadmin({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n   \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <button type=\"button\" class=\"btn btn-danger btn-lg adminLogout\" onClick={handleLogout}>LOGOUT</button>\r\n \r\n      \r\n      <h3 className=\"AdminAddCampaignTitle\">ADD CAMPAIGN</h3>\r\n      <h3 className=\"AdminAddAdminTitle\">ADD ADMIN</h3>\r\n      \r\n      {/* for creating new camopaigns */}\r\n      <div className=\"AdminAddCampaignForm Adminform\">\r\n      <CreateArea onAdd={addNote} />\r\n      </div>\r\n\r\n      {/* for creating new admin */}\r\n      <div className=\"AdminAddNewAdminForm Adminform\">\r\n\r\n      <form>\r\n        Email\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={newadmin.email}\r\n        />\r\n        Password\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={newadmin.password}\r\n        />\r\n        <button type=\"submit\" onClick={createNewAdmin}>\r\n          Add\r\n        </button>\r\n      </form>\r\n\r\n      </div>\r\n\r\n      {/* for printing all campaigns */}\r\n      <section className=\"AdminCard\">\r\n      {data.map((noteItem, index) => {\r\n        return (\r\n          <AdminCard\r\n            key={index}\r\n            id={index}\r\n            title={noteItem.title}\r\n            content={noteItem.content}\r\n            amount={noteItem.amount}\r\n            onDelete={deleteNote}\r\n            onUpdate={UpdateNote}\r\n            onBlock={BlockNote}\r\n          />\r\n        );\r\n      })}\r\n      </section>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}