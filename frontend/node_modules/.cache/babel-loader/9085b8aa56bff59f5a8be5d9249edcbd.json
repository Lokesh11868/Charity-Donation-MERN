{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CHARITY-DONATION\\\\frontend\\\\src\\\\components\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from 'react-router-dom';\n\nfunction PaymentForm() {\n  _s();\n\n  var _location$state3, _location$state4;\n\n  const location = useLocation();\n  const [note, setNote] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    amount: \"\"\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevNote => ({ ...prevNote,\n      [name]: value\n    }));\n  }\n\n  function submitData(event) {\n    var _location$state, _location$state2;\n\n    event.preventDefault(); // Adding additional info to the note\n\n    note.title = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.title) || \"Default Title\"; // Fallback if state is missing\n\n    note.content = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.content) || \"Default Content\"; // Sending data to your server\n\n    axios.post(\"http://localhost:4000/paynow\", note).then(res => {\n      console.log(\"Server Response:\", res.data);\n      const {\n        orderId,\n        amount,\n        currency\n      } = res.data; // Configure Razorpay payment options\n\n      const options = {\n        key: \"rzp_test_wzhYWw106XkE9u\",\n        // Replace with your Razorpay Key ID\n        amount: amount,\n        // Amount in paisa\n        currency: currency,\n        name: \"Your Organization Name\",\n        description: \"Donation Payment\",\n        order_id: orderId,\n        handler: function (response) {\n          console.log(\"Payment Successful:\", response);\n          alert(\"Payment Successful!\");\n        },\n        prefill: {\n          name: note.name,\n          email: note.email,\n          contact: note.phone\n        },\n        theme: {\n          color: \"#F37254\"\n        }\n      }; // Open Razorpay modal\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    }).catch(error => console.log(error)); // Reset form fields after submission\n\n    setNote({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      amount: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DONATION FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitData,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: handleChange,\n        value: note.name,\n        placeholder: \"Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        onChange: handleChange,\n        value: note.email,\n        placeholder: \"Email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        onChange: handleChange,\n        value: note.phone,\n        placeholder: \"Phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"amount\",\n        onChange: handleChange,\n        value: note.amount,\n        placeholder: \"Amount\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"title\",\n        onChange: handleChange,\n        value: ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.title) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"content\",\n        onChange: handleChange,\n        value: ((_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.content) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentForm, \"QMcDkHINNHHOnUjbRxNH+qSNgi8=\", false, function () {\n  return [useLocation];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Lokesh/CHARITY-DONATION/frontend/src/components/PaymentForm.js"],"names":["React","useState","axios","useLocation","PaymentForm","location","note","setNote","name","email","phone","amount","handleChange","event","value","target","prevNote","submitData","preventDefault","title","state","content","post","then","res","console","log","data","orderId","currency","options","key","description","order_id","handler","response","alert","prefill","contact","theme","color","rzp","window","Razorpay","open","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction PaymentForm() {\r\n  const location = useLocation();\r\n\r\n  const [note, setNote] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => ({\r\n      ...prevNote,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function submitData(event) {\r\n    event.preventDefault();\r\n\r\n    // Adding additional info to the note\r\n    note.title = location.state?.title || \"Default Title\"; // Fallback if state is missing\r\n    note.content = location.state?.content || \"Default Content\";\r\n\r\n    // Sending data to your server\r\n    axios\r\n      .post(\"http://localhost:4000/paynow\", note)\r\n      .then((res) => {\r\n        console.log(\"Server Response:\", res.data);\r\n\r\n        const { orderId, amount, currency } = res.data;\r\n\r\n        // Configure Razorpay payment options\r\n        const options = {\r\n          key: \"rzp_test_wzhYWw106XkE9u\", // Replace with your Razorpay Key ID\r\n          amount: amount, // Amount in paisa\r\n          currency: currency,\r\n          name: \"Your Organization Name\",\r\n          description: \"Donation Payment\",\r\n          order_id: orderId,\r\n          handler: function (response) {\r\n            console.log(\"Payment Successful:\", response);\r\n            alert(\"Payment Successful!\");\r\n          },\r\n          prefill: {\r\n            name: note.name,\r\n            email: note.email,\r\n            contact: note.phone,\r\n          },\r\n          theme: {\r\n            color: \"#F37254\",\r\n          },\r\n        };\r\n\r\n        // Open Razorpay modal\r\n        const rzp = new window.Razorpay(options);\r\n        rzp.open();\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    // Reset form fields after submission\r\n    setNote({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      amount: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"payment-form\">\r\n      <h1>DONATION FORM</h1>\r\n\r\n      <form onSubmit={submitData}>\r\n        <input\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={note.name}\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={note.email}\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"phone\"\r\n          onChange={handleChange}\r\n          value={note.phone}\r\n          placeholder=\"Phone\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"amount\"\r\n          onChange={handleChange}\r\n          value={note.amount}\r\n          placeholder=\"Amount\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n          value={location.state?.title || \"\"}\r\n        />\r\n\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          value={location.state?.content || \"\"}\r\n        />\r\n\r\n        <button type=\"submit\">Pay</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}