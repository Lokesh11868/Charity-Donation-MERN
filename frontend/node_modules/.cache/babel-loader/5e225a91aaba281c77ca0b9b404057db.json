{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lokesh\\\\CROWDFUNDING-WEBSITE\\\\crowdfunding\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n// function Login(props) {\n//   const [data, setData] = useState({});\n//   const [credential, setCredential] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const history = useHistory();\n//    const [user, setUser] = useState()\n//   useEffect(() => {\n//      if (data.result === true) \n//      {\n//        //set the state of the user\n//      setUser(data)\n//      //stoe the user in localStorage\n//      localStorage.setItem('user',data)\n//        return <Redirect to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> \n//   //     // return   <Redirect  to= \"/admin\"/>\n//   //     //   {/* <Redirect  to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> */}\n//      }\n//      if (data.result === false) {\n//      return <Redirect to=\"/login\" />;\n//     }\n//  }, [data]);\n//   function handleChange(event) {\n//     const { name, value } = event.target;\n//     setCredential((prevCredential) => {\n//       return {\n//         ...prevCredential,\n//         [name]: value,\n//       };\n//     });\n//   }\n//   function submitCredential(event) {\n//     event.preventDefault();\n//   const response=axios\n//       .post(\"http://localhost:4000/login\", credential)\n//       .then((res) => {\n//         setData(res.data);\n//         console.log(\"local storage:\",res.data)\n//       })\n//       .catch((error) => console.log(error));\n//     console.log(\"the credential\");\n//     console.log(credential);\n//     setCredential({\n//       email: \"\",\n//       password: \"\",\n//     });\n//   }\n//   useEffect(() => {\n//     console.log(\"data insie useeffect\",data);\n//     if (data.result === true) \n//     {\n//       console.log(\" if true data insie useeffect\",data.result);\n//       //set the state of the user\n//     // setUser(data)\n//     //stoe the user in localStorage\n//     localStorage.setItem('user',JSON.stringify(data))\n//       // <Redirect to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> \n//       // return   <Redirect  to= \"/admin\"/>\n//       //   {/* <Redirect  to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> */}\n//       history.push({\n//         pathname: '/admin',\n//         state: {  // location state\n//           loggedInStatus: data.result\n//         },\n//       }); \n//     }\n//     if (data.result === false) {\n//       alert(\"Mr.Culprit,you need to take a break!\");\n//       // <Redirect to=\"/login\" />;\n//     }\n//   }, [data]);\n//   //check if user has previously logged in\n//   useEffect(() => {\n//    const loggedInUser = localStorage.getItem('user');\n//     if (loggedInUser) {\n//       const foundUser = JSON.parse(loggedInUser);\n//       setUser(foundUser);\n//     }\n//   }, []);\n//   return (\n//     <div className=\"Login-page\">\n//       {/* <h1>LOGIN</h1> */}\n//       <form>\n//         Email\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           onChange={handleChange}\n//           value={credential.email}\n//         />\n//         Password\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           onChange={handleChange}\n//           value={credential.password}\n//         />\n//         <button type=\"submit\" onClick={submitCredential}>\n//           Login\n//         </button>\n//       </form>\n//     </div>\n//   );\n// } \n// export default Login;\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Login(props) {\n  _s();\n\n  const [credential, setCredential] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [data, setData] = useState({});\n  const [user, setUser] = useState(null);\n  const history = useHistory(); // Check if user is already logged in (from localStorage)\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('user');\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n      history.push('/admin'); // Redirect to admin page\n    }\n  }, [history]); // Handle input changes\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredential(prevCredential => ({ ...prevCredential,\n      [name]: value\n    }));\n  } // Handle form submission (login)\n\n\n  function submitCredential(event) {\n    event.preventDefault();\n    axios.post(\"http://localhost:4000/login\", credential).then(res => {\n      if (res.data.result === true) {\n        localStorage.setItem('user', JSON.stringify(res.data));\n        setData(res.data);\n        history.push('/admin'); // Navigate to the admin page\n      } else {\n        alert(\"Invalid credentials. Please try again.\");\n      }\n    }).catch(error => {\n      console.log(error);\n      alert(\"An error occurred. Please try again.\");\n    });\n    setCredential({\n      email: \"\",\n      password: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        value: credential.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        value: credential.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitCredential,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"Kmw8B9/1Y4TGL5mZiAh6BPuZ1Po=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Lokesh/CROWDFUNDING-WEBSITE/crowdfunding/src/components/Login.js"],"names":["React","useState","useEffect","useHistory","axios","Login","props","credential","setCredential","email","password","data","setData","user","setUser","history","loggedInUser","localStorage","getItem","foundUser","JSON","parse","push","handleChange","event","name","value","target","prevCredential","submitCredential","preventDefault","post","then","res","result","setItem","stringify","alert","catch","error","console","log"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Route, Redirect } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// function Login(props) {\r\n//   const [data, setData] = useState({});\r\n\r\n\r\n\r\n//   const [credential, setCredential] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n\r\n//   const history = useHistory();\r\n\r\n//    const [user, setUser] = useState()\r\n//   useEffect(() => {\r\n//      if (data.result === true) \r\n//      {\r\n//        //set the state of the user\r\n//      setUser(data)\r\n//      //stoe the user in localStorage\r\n//      localStorage.setItem('user',data)\r\n//        return <Redirect to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> \r\n//   //     // return   <Redirect  to= \"/admin\"/>\r\n//   //     //   {/* <Redirect  to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> */}\r\n      \r\n//      }\r\n    \r\n//      if (data.result === false) {\r\n//      return <Redirect to=\"/login\" />;\r\n//     }\r\n\r\n//  }, [data]);\r\n\r\n\r\n//   function handleChange(event) {\r\n//     const { name, value } = event.target;\r\n\r\n//     setCredential((prevCredential) => {\r\n//       return {\r\n//         ...prevCredential,\r\n//         [name]: value,\r\n//       };\r\n//     });\r\n//   }\r\n\r\n//   function submitCredential(event) {\r\n//     event.preventDefault();\r\n\r\n//   const response=axios\r\n//       .post(\"http://localhost:4000/login\", credential)\r\n//       .then((res) => {\r\n//         setData(res.data);\r\n        \r\n//         console.log(\"local storage:\",res.data)\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n\r\n//     console.log(\"the credential\");\r\n//     console.log(credential);\r\n\r\n//     setCredential({\r\n//       email: \"\",\r\n//       password: \"\",\r\n//     });\r\n//   }\r\n\r\n \r\n\r\n//   useEffect(() => {\r\n\r\n//     console.log(\"data insie useeffect\",data);\r\n    \r\n//     if (data.result === true) \r\n//     {\r\n//       console.log(\" if true data insie useeffect\",data.result);\r\n      \r\n//       //set the state of the user\r\n//     // setUser(data)\r\n//     //stoe the user in localStorage\r\n//     localStorage.setItem('user',JSON.stringify(data))\r\n//       // <Redirect to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> \r\n//       // return   <Redirect  to= \"/admin\"/>\r\n//       //   {/* <Redirect  to={{ pathname: \"/admin\", state: { loggedInStatus: data.result } }}/> */}\r\n\r\n\r\n\r\n//       history.push({\r\n//         pathname: '/admin',\r\n//         state: {  // location state\r\n//           loggedInStatus: data.result\r\n//         },\r\n//       }); \r\n      \r\n//     }\r\n    \r\n//     if (data.result === false) {\r\n//       alert(\"Mr.Culprit,you need to take a break!\");\r\n//       // <Redirect to=\"/login\" />;\r\n\r\n//     }\r\n\r\n//   }, [data]);\r\n\r\n\r\n//   //check if user has previously logged in\r\n//   useEffect(() => {\r\n//    const loggedInUser = localStorage.getItem('user');\r\n//     if (loggedInUser) {\r\n//       const foundUser = JSON.parse(loggedInUser);\r\n//       setUser(foundUser);\r\n//     }\r\n//   }, []);\r\n//   return (\r\n//     <div className=\"Login-page\">\r\n//       {/* <h1>LOGIN</h1> */}\r\n//       <form>\r\n//         Email\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           onChange={handleChange}\r\n//           value={credential.email}\r\n//         />\r\n//         Password\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           onChange={handleChange}\r\n//           value={credential.password}\r\n//         />\r\n//         <button type=\"submit\" onClick={submitCredential}>\r\n//           Login\r\n//         </button>\r\n//       </form>\r\n\r\n//     </div>\r\n//   );\r\n// } \r\n\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login(props) {\r\n  const [credential, setCredential] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [data, setData] = useState({});\r\n  const [user, setUser] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // Check if user is already logged in (from localStorage)\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem('user');\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n      history.push('/admin');  // Redirect to admin page\r\n    }\r\n  }, [history]);\r\n\r\n  // Handle input changes\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setCredential((prevCredential) => ({\r\n      ...prevCredential,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  // Handle form submission (login)\r\n  function submitCredential(event) {\r\n    event.preventDefault();\r\n\r\n    axios.post(\"http://localhost:4000/login\", credential)\r\n      .then((res) => {\r\n        if (res.data.result === true) {\r\n          localStorage.setItem('user', JSON.stringify(res.data));\r\n          setData(res.data);\r\n          history.push('/admin');  // Navigate to the admin page\r\n        } else {\r\n          alert(\"Invalid credentials. Please try again.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"An error occurred. Please try again.\");\r\n      });\r\n\r\n    setCredential({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n      <form>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={credential.email}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={credential.password}\r\n        />\r\n        <button type=\"submit\" onClick={submitCredential}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}